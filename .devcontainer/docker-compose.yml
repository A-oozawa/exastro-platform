#   Copyright 2022 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
version: '3.1'
services:
  platform-auth:
    build:
      dockerfile: ./platform_root/platform_auth/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - LISTEN_PORT=8000
      - PYTHONPATH=/app/
      - CONFIG_API_PATH=/app/api.conf
      - PYTHONIOENCODING=utf-8
      - EXASTRO_KEYCLOAK_USER=admin
      - EXASTRO_KEYCLOAK_PASSWORD=password
      - EXASTRO_KEYCLOAK_MASTER_REALM=master
      - API_KEYCLOAK_HOST=keycloak
      - API_KEYCLOAK_PROTOCOL=http
      - API_KEYCLOAK_PORT=8080
      #- KEYCLOAK_LOCATION=/auth/
      - KEYCLOAK_PROTOCOL=http
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=8080
      #- ITA_WEB_LOCATION=/*/workspaces/*/ita/
      - ITA_WEB_PROTOCOL=http
      - ITA_WEB_HOST=ita-web
      - ITA_WEB_PORT=80
      - ITA_API_PROTOCOL=http
      - ITA_API_HOST=ita-api
      - ITA_API_PORT=8000
      #- PLATFORM_WEB_LOCATION=/*/platform/
      - PLATFORM_WEB_PROTOCOL=http
      - PLATFORM_WEB_HOST=platform-web
      - PLATFORM_WEB_PORT=80
      - PLATFORM_API_PROTOCOL=http
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
      - DB_ADDR=platform-db
      - DB_DATABASE=platform
      - DB_USER=app_user
      - DB_PASSWORD=password
    ports:
      - "0.0.0.0:8000:8000"
  keycloak:
    build:
      dockerfile: ./platform_root/keycloak/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=password
      - PROXY_ADDRESS_FORWARDING=true
      - DB_VENDOR=mariadb
      - DB_ADDR=platform-db
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=password
    depends_on:
      platform-db:
        condition: service_healthy
  platform-db:
    image: mariadb:10.4.8
    healthcheck:
      test: mysqladmin ping --silent && mysql -u $${KEYCLOAK_DB_USER} -p$${KEYCLOAK_DB_PASSWORD} -D $${KEYCLOAK_DB_DATABASE} -e 'select 1;'
    volumes:
      - ../.volumes/platform-db/data:/var/lib/mysql
      - ../platform_root/platform_db/initdb:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - KEYCLOAK_DB_DATABASE=keycloak
      - KEYCLOAK_DB_USER=keycloak
      - KEYCLOAK_DB_PASSWORD=password
  platform-web:
    build:
      dockerfile: ./platform_root/platform_web/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - LISTEN_PORT=80

  platform-api:
    build:
      dockerfile: ./platform_root/platform_api/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - LISTEN_PORT=8000
      - PYTHONPATH=/app/
      - CONFIG_API_PATH=/app/api.conf
      - PYTHONIOENCODING=utf-8
      - API_KEYCLOAK_HOST=keycloak
      - API_KEYCLOAK_PROTOCOL=http
      - API_KEYCLOAK_PORT=8080
      - DB_ADDR=platform-db
      - DB_DATABASE=platform
      - DB_USER=app_user
      - DB_PASSWORD=password

  ita-api:
    build:
      dockerfile: ./Dockerfile
      context: ../test/api
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - CONFIG_API_PATH=/app/api.conf
      - API_PORT=8000
      - PYTHONIOENCODING=utf-8

  ita-web:
    build:
      dockerfile: ./test/web/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - LISTEN_PORT=80
